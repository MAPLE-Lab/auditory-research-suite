# generated by wxGlade 0.4.1 on Wed Apr  5 13:47:34 2006
#
# Copyright (C) 2006 University of Virginia
# Supported by grants to the University of Virginia from the National Eye Institute 
# and the National Institute of Deafness and Communicative Disorders.
# PI: Prof. Michael Kubovy <kubovy@virginia.edu>
# Author: Simeon H.K. Fitch <simeon.fitch@mseedsoft.com>
# Author: Michael Schutz <schutz@virginia.edu>
#
# Distributed under the terms of the GNU Lesser General Public License
# (LGPL). See LICENSE.TXT that came with this file.
#
# $Id: DemoGUI.py 125 2006-06-28 14:13:59Z sfitch $
#

"""
Demo mode control GUI.
"""

__version__ = '$LastChangedRevision: 125 $'
__author__ = 'Simeon H.K. Fitch <simeon.fitch@mseedsoft.com>'


import wx
import TrialData

class DemoGUIControls(wx.Panel):
    def __init__(self, parent, session, experimentUI, *args, **kwds):
        self.session = session
        self.experimentUI = experimentUI
        
        # begin wxGlade: DemoGUIControls.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, parent, -1, **kwds)
        
        self.label_1 = wx.StaticText(self, -1, "Pitch:", style=wx.ALIGN_RIGHT)
        self.pitch = wx.Choice(self, -1, choices=["E", "A", "D", "G"])
        self.label_4 = wx.StaticText(self, -1, "Delay:", style=wx.ALIGN_RIGHT)
        self.delay = wx.TextCtrl(self, -1, "0")
        self.filler = wx.StaticText(self, -1, "")
        self.label_2 = wx.StaticText(self, -1, "Visual:", style=wx.ALIGN_RIGHT)
        self.visual = wx.Choice(self, -1, choices=["Short", "Long", "Normal", "None"])
        self.loop = wx.CheckBox(self, -1, "Loop")
        self.loop.Enable(False)
        self.label_3 = wx.StaticText(self, -1, "Auditory:", style=wx.ALIGN_RIGHT)
        self.auditory = wx.Choice(self, -1, choices=["Short", "Long", "Normal", "Damped", "None"])
        self.label_6 = wx.StaticText(self, -1, "Num points:", style=wx.ALIGN_RIGHT)
        self.numPoints = wx.SpinCtrl(self, -1, "4", min=0, max=20)
        self.go = wx.Button(self, -1, "Go")
        
        self.label_7 = wx.StaticText(self, -1, "Aud. file:", style=wx.ALIGN_RIGHT)
        self.audfile = wx.TextCtrl(self, -1, "")
        self.label_8 = wx.StaticText(self, -1, "Vis. file:", style=wx.ALIGN_RIGHT)
        self.visfile = wx.TextCtrl(self, -1, "")
        self.label_9 = wx.StaticText(self, -1, "Vid. file:", style=wx.ALIGN_RIGHT)
        self.vidfile = wx.TextCtrl(self, -1, "")        
        
        self.useVid = wx.CheckBox(self, -1, "Use video", style=wx.ALIGN_RIGHT)
        
        # Simeon - I was trying to add a checkbox but couldn't get it to work
        #self.noIntroSilence = wx.CheckBox(self, -1, "No introSilence")
        
        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.goHandler, self.go)
        self.Bind(wx.EVT_CHOICE, self.updateBasename, self.pitch)
        self.Bind(wx.EVT_CHOICE, self.updateBasename, self.visual)
        self.Bind(wx.EVT_CHOICE, self.updateBasename, self.auditory)
        self.updateBasename(None)

    def __set_properties(self):
        self.pitch.SetSelection(0)
        self.visual.SetSelection(0)
        self.auditory.SetSelection(0)
        self.go.SetDefault()

    def __do_layout(self):
        grid_sizer_1 = wx.GridBagSizer(2, 5)
        grid_sizer_1.SetFlexibleDirection(wx.HORIZONTAL)
        grid_sizer_1.Add(self.label_1, pos=(0,0), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.pitch, pos=(0,1))
        
        grid_sizer_1.Add(self.label_2, pos=(1,0), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.visual, pos=(1,1))

        grid_sizer_1.Add(self.label_3, pos=(2,0), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.auditory, pos=(2,1))
        
        
        grid_sizer_1.Add(self.label_4, pos=(0,2), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.delay, pos=(0,3))


        grid_sizer_1.Add(self.label_6, pos=(1,2), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.numPoints,pos=(1,3))
        

        grid_sizer_1.Add(self.loop, pos=(2,3))
        
        
        grid_sizer_1.Add(self.label_7, pos=(3, 0), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.audfile, pos=(3,1), span=(1,3), flag=wx.EXPAND)
        
        grid_sizer_1.Add(self.label_8, pos=(4, 0), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.visfile, pos=(4,1), span=(1,3), flag=wx.EXPAND)
        
        grid_sizer_1.Add(self.label_9, pos=(5, 0), flag=wx.ALIGN_RIGHT)
        grid_sizer_1.Add(self.vidfile, pos=(5,1), span=(1,3), flag=wx.EXPAND)
                
        grid_sizer_1.Add(self.useVid, pos=(6,1), span=(1,1), flag=wx.EXPAND)

        grid_sizer_1.Add(self.go, pos=(7,0), span=(2, 4), flag=wx.ALIGN_CENTER)
        
        
        self.SetAutoLayout(True)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.Fit(self)
        grid_sizer_1.SetSizeHints(self)
        grid_sizer_1.AddGrowableCol(1)
        grid_sizer_1.AddGrowableCol(3)
        grid_sizer_1.AddGrowableCol(4)
    


    def getPitch(self):
        return ("e","a","d","g")[self.pitch.GetSelection()]
        
    def getVisual(self):
        return ("s", "l", "n", "x")[self.visual.GetSelection()]
        
    def getAuditory(self):
        return ("s", "l", "n", "p", "x")[self.auditory.GetSelection()]
        
    def getDelay(self):
        return float(self.delay.GetValue())
        
    def getNumPoints(self):
        return int(self.numPoints.GetValue())
        
    def getVisualFile(self):
        if not self.useVid.GetValue():
            return self.visfile.GetValue()
        else:
            return None
        
    def getAudioFile(self):
        if not self.useVid.GetValue():
            return self.audfile.GetValue()
        else:
            return None
    
    def getVideoFile(self):
        if self.useVid.GetValue():
            return self.vidfile.GetValue()
        else:
            return None
        
    def updateBasename(self, event):
        pitch = self.getPitch()
        vis = self.getVisual()
        aud = self.getAuditory()
        
        (audFile, visFile, vidFile) = TrialData.constructDataFileNames(
            self.session, pitch, vis, aud)

        # Since the text widgets will barf on None values, set to empty text
        # when file not found.
        if audFile is None:
            audFile = ""
        if visFile is None:
            visFile = ""
        if vidFile is None:
            vidFile = ""
            
        self.audfile.SetValue(audFile)
        self.visfile.SetValue(visFile)
        self.vidfile.SetValue(vidFile)

    def goHandler(self, event): 
        
        # introSilence = TrialData.lookupSilence(self.getPitch(), self.getAuditory())    
        introSilence = 0
        if not self.useVid.GetValue():
            introSilence = TrialData.lookupSilence(self.getAudioFile())


        visFile = self.getVisualFile()
        audFile = self.getAudioFile()
        vidFile = self.getVideoFile()
        
        trial = TrialData.Trial(
                    visFile,
                    self.session.aspectRatio,
                    audFile,
                    introSilence,
                    self.getDelay(), 
                    self.getPitch(), 
                    self.getVisual(), 
                    self.getAuditory(), 
                    self.getNumPoints(),
                    vidFile=vidFile)

        print "Selected trial: " + trial.getDisplayString()
        
        while True:
            self.experimentUI.setTrial(trial)
            if not self.loop.GetValue():
                break;

class DemoGUIFrame(wx.Frame):
    def __init__(self, session, ui, **kwds):
#        kwds["style"] = wx.CAPTION|wx.MINIMIZE_BOX|wx.STAY_ON_TOP|wx.SYSTEM_MENU|wx.FRAME_FLOAT_ON_PARENT|wx.CLIP_CHILDREN
        kwds["style"] = wx.DEFAULT_FRAME_STYLE & ~ (wx.CLOSE_BOX)
        wx.Frame.__init__(self, None, -1, **kwds)
        self.controls = DemoGUIControls(self, session, ui)

        self.__set_properties()
        self.__do_layout()

    def __set_properties(self):
        self.SetTitle("SI Demo Mode")

    def __do_layout(self):
        topFrameSizer = wx.BoxSizer(wx.VERTICAL)
        topFrameSizer.Add(self.controls, 1, wx.EXPAND, 4)
        self.SetAutoLayout(True)
        self.SetSizer(topFrameSizer)
        topFrameSizer.Fit(self)
        topFrameSizer.SetSizeHints(self)
        self.Layout()
        
        
        # Pseudo auto size...
        size = self.GetSize()
        size[0] = max(600, size[0])
        size[1] = size[1] + 30
        self.SetSize(size)            


class DemoGUITestApp(wx.App):
    def OnInit(self):
        wx.InitAllImageHandlers()
        demoFrame = DemoGUIFrame(None, None)
        self.SetTopWindow(demoFrame)
        demoFrame.Show()
        return 1

# end of class DemoGUITestApp

if __name__ == "__main__":
    app = DemoGUITestApp(0)
    app.MainLoop()
